/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_
// Simple Mesh Cutter
// © 2017-2018 Kazuya Hiruma
// Version 1.1.0
/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_

Simple Mesh Cutterはシンプルなメッシュカットを提供するアセットです。

=====================================================================================
## 更新履歴

Version 1.1.0:
Cutterクラスのカット実行をスレッドプール化しました。
またそれに伴い、ワーカスレッドからのコールバックの仕組みを追加しています。

以前のVersion 1.0.0ではワーカスレッドにバグがありました。
一部の変数がスレッドセーフではなく使われていたので、スレッドセーフに修正しました。

Version 1.0.0:
- First Release
=====================================================================================



## 使い方

メッシュの切断には以下のふたつのコンポーネントを使用します。

- Cutter
- CutterTarget

順に説明します。


### CutterTarget

カッターのターゲットとなるオブジェクトにAddComponentして使います。
インスペクタでの設定項目はふたつ。
ひとつは切断面のマテリアル（Cut Material）です。

切断時は、切断された箇所が平面としてポリゴンが形成されます。
その平面に適用されるマテリアルを設定します。
（設定しない場合、後述するCutterにて設定されたデフォルトのマテリアルが使用されます）

ふたつめは切断対象となるメッシュを持つTransformオブジェクトを設定する「Mesh」です。
切断実行時は、ここで設定されたオブジェクトのMeshを検索し切断を行います。



### Cutter

切断を実際に実行するコンポーネントです。
空のオブジェクトなどにAddComponentするなどして利用してください。

#### カットを実行する

カットを実行するには、Cutterコンポーネントの「Cut」メソッドを実行します。
Syntaxは以下です。

```
public void Cut(CutterTarget target, Vector3 position, Vector3 normal, CutterCallback callback = null, object userdata = null);
```

第一引数は、最初に説明した「CutterTarget」を指定します。
第二引数は切断位置、第三引数は切断平面の法線となります。

切断は、第二引数の位置に、第三引数の法線を持つ平面があると仮定して処理を行います。

--------------------------------------
【Version 1.1.0より追加】
第四引数は切断後のコールバックを指定します。
第五引数はコールバックに渡されるユーザデータです。切断後に、切断されたオブジェクトの識別など自由にお使いください。

CutterCallbackのSyntax

```
public delegate void CutterCallback(bool success, GameObject[] cuttedObjects, CutterPlane plane, object userdata);
```

第一引数は切断が成功した場合にtrueが設定されます。
　切断面に対してすべての頂点が片方に寄っているなど、切断が正常に終了しなかった場合はfalseとなります。
第二引数は切断されたあと生成されたふたつのオブジェクトの配列です。
第三引数は、切断に利用された平面オブジェクトです。
第四引数は、Cutter.Cutメソッドに渡したユーザデータがそのまま返ってきます。
--------------------------------------



#### 切断完了後のコールバック

Cutterコンポーネントには、「OnCutted」と「OnFailed」のふたつのアクションが設定されています。

OnCuttedは、切断処理が完了した際に呼ばれるイベントです。
引数には、切断後のふたつのオブジェクトと、切断に使用された平面の情報が渡ってきます。

OnFailedは、切断処理を実行したが、切断が失敗した際に呼ばれるイベントです。
切断を指定した平面がメッシュを切断する位置になかった場合に呼ばれます。
（平面の片方にすべての頂点があった場合）


--------------------------------------
【Version 1.1.0より追加】
上で書いた通り、コールバックをCutter.Cutメソッドの引数に渡すことが可能になりました。
OnCuttedよりもユーザデータの取扱や、Cut実行時に動的にコールバックを渡せます。
--------------------------------------
